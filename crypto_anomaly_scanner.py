import requests
import time
import statistics

API_URL = "https://api.coingecko.com/api/v3/simple/price"
COINS = ["bitcoin", "ethereum", "dogecoin", "solana", "cardano"]
VS_CURRENCY = "usd"
HISTORY = {coin: [] for coin in COINS}
THRESHOLD = 5  # % –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –¥–ª—è —Å–∏–≥–Ω–∞–ª–∞

def fetch_prices():
    response = requests.get(API_URL, params={"ids": ",".join(COINS), "vs_currencies": VS_CURRENCY})
    return response.json()

def detect_anomalies(prices):
    for coin, data in prices.items():
        price = data[VS_CURRENCY]
        HISTORY[coin].append(price)
        
        if len(HISTORY[coin]) > 20:  # –•—Ä–∞–Ω–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 –∑–Ω–∞—á–µ–Ω–∏–π
            HISTORY[coin].pop(0)
        
        if len(HISTORY[coin]) > 5:
            avg = statistics.mean(HISTORY[coin])
            deviation = ((price - avg) / avg) * 100
            
            if abs(deviation) > THRESHOLD:
                print(f"üö® –ê–ù–û–ú–ê–õ–ò–Ø: {coin.upper()} —Å–µ–π—á–∞—Å {price}$ ({deviation:.2f}% –æ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ {avg:.2f}$)")

def main():
    print("üöÄ Crypto Anomaly Scanner –∑–∞–ø—É—â–µ–Ω!")
    while True:
        try:
            prices = fetch_prices()
            detect_anomalies(prices)
        except Exception as e:
            print("–û—à–∏–±–∫–∞:", e)
        time.sleep(30)  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥

if __name__ == "__main__":
    main()
